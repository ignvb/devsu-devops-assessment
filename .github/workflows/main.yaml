name: devsu-assesment-ci

on:
  push:
    branches: [ dev ]

jobs:
  build:
    name: GitOps workflow
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.3'

    - name: Install dependencies
      run: |
        pip install -r ./src/requirements.txt -r ./src/req_unittest.txt

    - name: Unit test
      run: |
        cd ./src
        tox -e py
        cd ..

    - name: Override path in coverage report
      run: sed -i "s/<source>\/home\/runner\/work\/devsu-devops-assessment\/devsu-devops-assessment\/src\/api<\/source>/<source>\/github\/workspace\/src\/api<\/source>/g" /home/runner/work/devsu-devops-assessment/devsu-devops-assessment/src/coverage.xml

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.SONAR_GITHUB }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and tag image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_NAME: ${{ vars.IMAGE_NAME }}

      run: |
        # Build a docker container and push it to ECR
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        echo "Building image $ECR_REGISTRY/$IMAGE_NAME:$git_hash"
        docker build -t $ECR_REGISTRY/$IMAGE_NAME:$git_hash .
        echo "Pushing image $IMAGE_NAME:$git_hash to AWS ECR"
        docker push $ECR_REGISTRY/$IMAGE_NAME:$git_hash
